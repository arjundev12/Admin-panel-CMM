{"version":3,"sources":["views/drivers/Users.js"],"names":["Users","useHistory","useState","showPerPage","total","setTotal","page","setPage","index","setIndex","user","setUser","useParams","id","useEffect","loadUser","a","data","offset","limit","axios","post","CONSTANT","res","console","warn","code","docs","toast","onInputChange","e","item","target","name","isDocumentVerify","value","driverStatus","_id","put","response","message","className","to","striped","bordered","hover","map","i","isProfileCompleted","phoneNo","address","class","onChange","onPaginationChange","start","end"],"mappings":"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","file":"static/js/25.eefa120d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\nimport axios from \"axios\";\nimport { Button, Table } from 'react-bootstrap'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport *as  CONSTANT from '../../constant'\nimport Pagination from '../pagination/pagination'\n\nconst Users = () => {\n    const history = useHistory()\n    const [showPerPage, setShowPerPage] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n    const [index, setIndex] = useState(1);\n\n    let [user, setUser] = useState([]);\n    const { id } = useParams();\n    useEffect(() => {\n        loadUser(page);\n    }, [page, total]);\n    const loadUser = async (page) => {\n        const data = {\n            offset: page,\n            limit: 10\n        }\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/get-driver`, data);\n        console.warn(\"respons\", res.data.data)\n        if (res.data.code == 200) {\n            // toast(\"List get successfully\")\n            await setTotal(res.data.data.total)\n            await setUser(res.data.data.docs);\n        } else {\n            toast(\"somthing went wrong\")\n        }\n\n    };\n\n    const onPaginationChange = (start, end) => {\n        console.warn(\"getee, \", start, end)\n        setPage(start)\n        setIndex(end)\n    };\n    // const detailsView = async (item) => {\n    //     console.warn(\"inside handle click\", item)\n    //     // history.push(`/user/${item._id}  `)\n    // }\n    const onInputChange = async (e, item) => {\n        console.warn(\"oninput change data \",  item)\n        let data = {}\n        if(e.target.name == 'isDocumentVerify'){\n            data.isDocumentVerify = e.target.value\n        }\n        if(e.target.name == 'driverStatus'){\n            data.driverStatus = e.target.value\n        }\n        \n        data._id = item._id\n        let response = await axios.put(`${CONSTANT.baseUrl}/api/admin/update-driver`, data);\n        if(response.data.code ==200){\n            toast( response.data.message)\n            loadUser(page)\n        }else{\n            toast(\"somthing went wrong\")\n        }\n      \n    };\n\n    return (\n        <div>\n            <Link className=\"btn btn-primary back\" to=\"/\">\n                back to Home\n       </Link>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>S.no</th>\n                        <th>Name</th>\n                        <th>Profile Complete</th>\n                        <th>Number</th>\n                        <th>address</th>\n                        <th>Status</th>\n                        <th>Doc Status</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        user.map((item, i) => <tr>\n                            <td>{i + index + 1}</td>\n                            <td>{item.name ? item.name : null}</td>\n                            <td>{item.isProfileCompleted == true ? \"Yes\" : \"No\"}</td>\n                            <td>{item.phoneNo}</td>\n                            <td>{item.address}</td>\n                            <td>\n                                <select class=\"form-control\" name=\"driverStatus\" value={item.driverStatus}\n                                    onChange={e => onInputChange(e, item)}>\n                                    <option value=\"active\">Active</option>\n                                    <option value=\"inactive\">Inactive</option>\n                                    <option value=\"blocked\">Block</option>\n                                </select></td>\n                            <td>\n                                <select class=\"form-control\" name=\"isDocumentVerify\" value={item.isDocumentVerify}\n                                    onChange={e => onInputChange(e, item)}>\n                                    <option value=\"uploade\">Uploade</option>\n                                    <option value=\"notupload\">Notupload</option>\n                                    <option value=\"verified\">Verified</option>\n                                    <option value=\"rejected\">Rejected</option>\n                                </select></td>\n                            <td><Link className=\"btn btn-primary mr-2 \" to={`/user/${item._id}`}>view </Link>\n                                <Link className=\"btn btn-primary mr-2\" to={`/user/edit/${item._id}`}> edit </Link>\n                                <Link className=\"btn btn-primary mr-2\" to={`/wallet/driver/${item._id}`}> wallet </Link>\n                                {/* <Link className=\"btn btn-primary \" to=\"/\"> delete</Link> */}\n                            </td>\n                        </tr>)\n                    }\n                </tbody>\n\n            </Table>\n            <ToastContainer />\n            <Pagination\n                showPerPage={showPerPage}\n                onPaginationChange={onPaginationChange}\n                total={total}\n                page={page}\n            />\n        </div>\n    )\n}\n\nexport default Users\n"],"sourceRoot":""}