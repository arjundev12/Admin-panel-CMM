{"version":3,"sources":["views/cities/city.js"],"names":["City","useHistory","useState","total","setTotal","page","city","setCity","useParams","id","useEffect","loadcities","a","data","offset","limit","console","log","axios","post","CONSTANT","res","warn","code","toast","docs","onInputChange","e","item","target","name","status","value","_id","put","response","message","show","setShow","region","setRegion","regionName","setRegionName","cityName","setCityName","cityArray","setCityArray","handleClose","handleShow","csc","getStatesOfCountry","onInputChangeRegion","getCitiesOfState","getcitys","onInputChangeCity","onSubmit","preventDefault","showcity","setShowCity","cityData","setCityData","pin","setPin","error","setError","handleCloseCity","handleShowCity","onInputChangePin","length","onSubmitPin","cityid","class","className","to","variant","onClick","striped","bordered","hover","map","i","onChange","onHide","Header","closeButton","Title","isoCode","Footer","type","placeholder"],"mappings":"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","file":"static/js/19.d104b38f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Button, Table, Modal } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport *as  CONSTANT from '../../constant'\r\nimport Pagination from '../pagination/pagination'\r\nimport '../../css/style.css'\r\nimport csc from 'country-state-city'\r\n\r\nconst City = () => {\r\n    const history = useHistory()\r\n    const [showPerPage, setShowPerPage] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [index, setIndex] = useState(1);\r\n    const [city, setCity] = useState([]);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        loadcities(page);\r\n    }, [page, total]);\r\n\r\n    const loadcities = async () => {\r\n        const data = {\r\n            offset: page,\r\n            limit: 10\r\n        }\r\n        console.log(\"requset0\", data)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/cities`, data);\r\n        console.warn(\"respons\", res.data.data)\r\n        if (res.data.code == 200) {\r\n            toast(\"List get successfully\")\r\n            await setTotal(res.data.data.total)\r\n            await setCity(res.data.data.docs);\r\n        } else {\r\n            toast(\"somthing went wrong\")\r\n        }\r\n    };\r\n    const onPaginationChange = (start, end) => {\r\n        console.warn(\"getee, \", start, end)\r\n        setPage(start)\r\n        setIndex(end)\r\n    };\r\n    const onInputChange = async (e, item) => {\r\n        console.warn(\"oninput change data \", item)\r\n        let data = {}\r\n        if (e.target.name == 'status') {\r\n            data.status = e.target.value\r\n        }\r\n\r\n        data._id = item._id\r\n        let response = await axios.put(`${CONSTANT.baseUrl}/api/admin/update-city`, data);\r\n        if (response.data.code == 200) {\r\n            toast(response.data.message)\r\n            loadcities(page)\r\n        } else {\r\n            toast(\"somthing went wrong\")\r\n        }\r\n    }\r\n    //======================================modalcode==================================//\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [region, setRegion] = useState([]);\r\n    const [regionName, setRegionName] = useState();\r\n    const [cityName, setCityName] = useState()\r\n    const [cityArray, setCityArray] = useState([]);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = async () => {\r\n        setShow(true);\r\n        let data = await csc.getStatesOfCountry('IN')\r\n        await setRegion(data)\r\n    }\r\n\r\n    const onInputChangeRegion = async (e) => {\r\n\r\n        await setRegionName(e.target.value)\r\n        let getcitys = await csc.getCitiesOfState('IN', e.target.value)\r\n        await setCityArray(getcitys)\r\n    }\r\n\r\n    const onInputChangeCity = async (e) => {\r\n        await setCityName(e.target.value)\r\n    }\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let data = {\r\n            cityName: cityName\r\n        }\r\n\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/add-city`, data);\r\n        if (res.data.code == 200) {\r\n            toast(res.data.message)\r\n            handleClose()\r\n            loadcities(page);\r\n        } else {\r\n            toast(res.data.message)\r\n            handleClose()\r\n            loadcities(page);\r\n        }\r\n\r\n    }\r\n    //====================================add pin code===================================//\r\n    const [showcity, setShowCity] = useState(false);\r\n    const [cityData, setCityData] = useState({\r\n        name: \"\"\r\n    });\r\n    const [pin, setPin] = useState({\r\n        code: \"\"\r\n    });\r\n\r\n    const [error, setError] = useState({})\r\n\r\n    const handleCloseCity = () => setShowCity(false);\r\n\r\n    const handleShowCity = async (e, item) => {\r\n        setShowCity(true);\r\n        console.warn(\"dataataaa\", item)\r\n        await setCityData(item)\r\n    }\r\n    const onInputChangePin = async (e) => {\r\n        console.warn(\"onInputChangePin\", e.target.value.length)\r\n        if (e.target.value.length == 6) {\r\n            await setPin({ code: e.target.value })\r\n            setError({})\r\n        } else {\r\n            setError({ pin: \"invalid pin\" })\r\n        }\r\n    }\r\n    const onSubmitPin = async (e) => {\r\n        let data = {\r\n            cityid: cityData.id,\r\n            name : pin.code\r\n        }\r\n\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/add-pin`, data);\r\n        if (res.data.code == 200) {\r\n            toast(res.data.message)\r\n            handleCloseCity()\r\n            loadcities(page);\r\n        } else {\r\n            toast(res.data.message)\r\n            handleCloseCity()\r\n            loadcities(page);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"btn-right\">\r\n            <Link className=\"btn btn-primary btn-home\" to=\"/dashboard\">\r\n                back to Home\r\n       </Link>\r\n            <Button variant=\"primary btn-link\" onClick={handleShow}>\r\n                add city\r\n      </Button>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>S.no</th>\r\n                        <th>Name</th>\r\n                        <th class=\"status\">Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        city.map((item, i) => <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{item.name ? item.name : null}</td>\r\n                            <td><select class=\"form-control\" name=\"status\" value={item.status}\r\n                                onChange={e => onInputChange(e, item)}>\r\n                                <option value=\"1\">Active</option>\r\n                                <option value=\"0\">Inactive</option>\r\n                                {/* <option value=\"blocked\">Block</option> */}\r\n                            </select></td>\r\n                            <td>\r\n                                {/* <Link className=\"btn btn-primary mr-2 \" to={`/view-city/${item._id}`}>view </Link> */}\r\n                                <Button className=\"btn btn-primary mr-2 \" onClick={e => handleShowCity(e, item)}>\r\n                                    Add Pincode\r\n                                </Button>\r\n                                {/* <Link className=\"btn btn-primary mr-2\" to={`/wallet/customer/${item._id}`}> delete </Link> */}\r\n                                {/* <Link className=\"btn btn-primary \" to=\"/\"> delete</Link> */}\r\n                            </td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add City</Modal.Title>\r\n                </Modal.Header>\r\n                <div class=\"row\">\r\n                    <div class=\"popupselect\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <div class=\"state-name\">\r\n                                <label>State Name</label>\r\n                                <select class=\"form-control\" name=\"regionName\" onChange={e => onInputChangeRegion(e)} value={regionName}>\r\n                                    {\r\n                                        region.map((item, i) =>\r\n                                            <option value={item.isoCode} >{item.name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <div class=\"city\">\r\n                                <label>City Name</label>\r\n                                <select class=\"form-control\" name=\"cityName\" onChange={e => onInputChangeCity(e)} value={cityName}>\r\n                                    {\r\n                                        cityArray.map((item, i) =>\r\n                                            <option value={item.name} >{item.name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={e => onSubmit(e)}>\r\n                        Submit\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={showcity} onHide={handleCloseCity}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{cityData.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <div class=\"row\">\r\n                    <div class=\"state-name-code\">\r\n                        <label>Pincode</label>\r\n                        <input  type=\"text\" name=\"code\"\r\n                            class=\"form-control\" placeholder=\"\"\r\n                            onChange={e => onInputChangePin(e)} />\r\n                        <div className=\"text-danger\">{error.pin}</div>\r\n                    </div>\r\n                </div>\r\n                <div class ='footer-side'>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseCity}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={e => onSubmitPin(e)}>\r\n                        Submit\r\n          </Button>\r\n                </Modal.Footer>\r\n                </div>\r\n                \r\n            </Modal>\r\n            <ToastContainer />\r\n            {/* <Pagination\r\n                showPerPage={showPerPage}\r\n                onPaginationChange={onPaginationChange}\r\n                total={total}\r\n                page={page}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City\r\n"],"sourceRoot":""}