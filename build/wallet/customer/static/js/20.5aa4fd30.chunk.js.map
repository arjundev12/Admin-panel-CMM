{"version":3,"sources":["views/cms/cms.js"],"names":["Cms","useHistory","useState","total","page","data","setData","useParams","id","useEffect","loaddata","a","console","log","axios","post","CONSTANT","res","warn","code","toast","itemDelete","e","item","delete","_id","message","class","className","to","striped","bordered","hover","map","i","type","title","onClick"],"mappings":"wWAmReA,UAxQH,WACQC,cAAhB,IADc,EAEwBC,mBAAS,IAFjC,gCAGYA,mBAAS,IAHrB,mBAGPC,EAHO,aAIUD,mBAAS,IAJnB,mBAIPE,EAJO,aAKYF,mBAAS,IALrB,gCAMUA,mBAAS,KANnB,mBAMPG,EANO,KAMDC,EANC,KAOCC,cAAPC,GACRC,qBAAU,WACNC,EAASN,KACV,CAACA,EAAMD,IAEV,IAAMO,EAAQ,uCAAG,8BAAAC,EAAA,6DACPN,EAAO,GAIbO,QAAQC,IAAI,WAAYR,GALX,SAMKS,IAAMC,KAAN,UAAcC,IAAd,sBAAoDX,GANzD,UAMPY,EANO,OAObL,QAAQM,KAAK,UAAWD,EAAIZ,KAAKA,MACZ,KAAjBY,EAAIZ,KAAKc,KARA,wBASTC,YAAM,yBATG,UAWHd,EAAQW,EAAIZ,KAAKA,MAXd,gCAaTe,YAAM,uBAbG,4CAAH,qDAqBRC,EAAU,uCAAG,WAAOC,EAAGC,GAAV,eAAAZ,EAAA,6DACfC,QAAQC,IAAI,cAAeU,GADZ,SAEGT,IAAMU,OAAN,UAAgBR,IAAhB,qCAA6DO,EAAKE,MAFrE,OAETR,EAFS,OAGfG,YAAM,GAAD,OAAIH,EAAIZ,KAAKqB,UAClBhB,EAASN,GAJM,2CAAH,wDAjCF,EAyDUF,oBAAS,GAzDnB,6BAiJd,OACI,sBAAKyB,MAAM,YAAX,UACI,cAAC,IAAD,CAAMC,UAAU,2BAA2BC,GAAG,aAA9C,0BAMA,eAAC,IAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,sCACA,sCACA,uCAEA,8CAGR,gCAEQ3B,EAAK4B,KAAI,SAACV,EAAMW,GAAP,OAAa,+BAClB,6BAAKA,EAAI,IACT,6BAAKX,EAAKY,KAAOZ,EAAKY,KAAO,OAC7B,6BAAKZ,EAAKa,MAAQb,EAAKa,MAAQ,OAO/B,+BACI,cAAC,IAAD,CAAMR,UAAU,wBAAwBC,GAAE,oBAAeN,EAAKE,KAA9D,mBAKA,cAAC,IAAD,CAAQG,UAAU,mBAAmBS,QAAS,SAAAf,GAAC,OAAID,EAAWC,EAAGC,IAAjE,mCAwEpB,cAAC,IAAD","file":"static/js/20.5aa4fd30.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Button, Table, Modal } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport *as  CONSTANT from '../../constant'\r\nimport Pagination from '../pagination/pagination'\r\nimport '../../css/style.css'\r\nimport csc from 'country-state-city'\r\n\r\nconst Cms = () => {\r\n    const history = useHistory()\r\n    const [showPerPage, setShowPerPage] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [index, setIndex] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        loaddata(page);\r\n    }, [page, total]);\r\n\r\n    const loaddata = async () => {\r\n        const data = {\r\n            // offset: page,\r\n            // limit: 10\r\n        }\r\n        console.log(\"requset0\", data)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/get-cms`, data);\r\n        console.warn(\"respons\", res.data.data)\r\n        if (res.data.code == 200) {\r\n            toast(\"List get successfully\")\r\n            // await setTotal(res.data.data.total)\r\n            await setData(res.data.data);\r\n        } else {\r\n            toast(\"somthing went wrong\")\r\n        }\r\n    };\r\n    // const onPaginationChange = (start, end) => {\r\n    //     console.warn(\"getee, \", start, end)\r\n    //     setPage(start)\r\n    //     setIndex(end)\r\n    // };\r\n    const itemDelete = async (e, item)=>{\r\n        console.log(\"delete item\", item)\r\n        const res = await axios.delete(`${CONSTANT.baseUrl}/api/admin/delete-cms?_id=${item._id}`);\r\n        toast(`${res.data.message}`)\r\n        loaddata(page);\r\n    }\r\n    const onInputChange = async (e, item) => {\r\n        console.warn(\"oninput change data \", item)\r\n        let data = {}\r\n        if (e.target.name == 'status') {\r\n            data.status = e.target.value\r\n        }\r\n\r\n        // data._id = item._id\r\n        // let response = await axios.put(`${CONSTANT.baseUrl}/api/admin/update-city`, data);\r\n        // if (response.data.code == 200) {\r\n        //     toast(response.data.message)\r\n        //     loadcities(page)\r\n        // } else {\r\n        //     toast(\"somthing went wrong\")\r\n        // }\r\n    }\r\n    //======================================modalcode==================================//\r\n\r\n    const [show, setShow] = useState(false);\r\n    // const [region, setRegion] = useState([]);\r\n    // const [regionName, setRegionName] = useState();\r\n    // const [cityName, setCityName] = useState()\r\n    // const [cityArray, setCityArray] = useState([]);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = async () => {\r\n        setShow(true);\r\n        // let data = await csc.getStatesOfCountry('IN')\r\n        // await setRegion(data)\r\n    }\r\n\r\n    // const onInputChangeRegion = async (e) => {\r\n\r\n    //     await setRegionName(e.target.value)\r\n    //     let getcitys = await csc.getCitiesOfState('IN', e.target.value)\r\n    //     await setCityArray(getcitys)\r\n    // }\r\n\r\n    // const onInputChangeCity = async (e) => {\r\n    //     await setCityName(e.target.value)\r\n    // }\r\n    // const onSubmit = async e => {\r\n    //     e.preventDefault();\r\n    //     let data = {\r\n    //         cityName: cityName\r\n    //     }\r\n\r\n    //     const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/add-city`, data);\r\n    //     if (res.data.code == 200) {\r\n    //         toast(res.data.message)\r\n    //         handleClose()\r\n    //         loadcities(page);\r\n    //     } else {\r\n    //         toast(res.data.message)\r\n    //         handleClose()\r\n    //         loadcities(page);\r\n    //     }\r\n\r\n    // }\r\n    //====================================add pin code===================================//\r\n    // const [showcity, setShowCity] = useState(false);\r\n    // const [cityData, setCityData] = useState({\r\n    //     name: \"\"\r\n    // });\r\n    // const [pin, setPin] = useState({\r\n    //     code: \"\"\r\n    // });\r\n\r\n    // const [error, setError] = useState({})\r\n\r\n    // const handleCloseCity = () => setShowCity(false);\r\n\r\n    // const handleShowCity = async (e, item) => {\r\n    //     setShowCity(true);\r\n    //     console.warn(\"dataataaa\", item)\r\n    //     await setCityData(item)\r\n    // }\r\n    // const onInputChangePin = async (e) => {\r\n    //     console.warn(\"onInputChangePin\", e.target.value.length)\r\n    //     if (e.target.value.length == 6) {\r\n    //         await setPin({ code: e.target.value })\r\n    //         setError({})\r\n    //     } else {\r\n    //         setError({ pin: \"invalid pin\" })\r\n    //     }\r\n    // }\r\n    // const onSubmitPin = async (e) => {\r\n    //     let data = {\r\n    //         cityid: cityData.id,\r\n    //         name : pin.code\r\n    //     }\r\n\r\n    //     const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/add-pin`, data);\r\n    //     if (res.data.code == 200) {\r\n    //         toast(res.data.message)\r\n    //         handleCloseCity()\r\n    //         loadcities(page);\r\n    //     } else {\r\n    //         toast(res.data.message)\r\n    //         handleCloseCity()\r\n    //         loadcities(page);\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <div class=\"btn-right\">\r\n            <Link className=\"btn btn-primary btn-home\" to=\"/dashboard\">\r\n                back to Home\r\n       </Link>\r\n            {/* <Button variant=\"primary btn-link\" onClick={handleShow}>\r\n                add city\r\n      </Button> */}\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>S.no</th>\r\n                        <th>Type</th>\r\n                        <th>Title</th>\r\n                        {/* <th class=\"status\">Status</th> */}\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map((item, i) => <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{item.type ? item.type : null}</td>\r\n                            <td>{item.title ? item.title : null}</td>\r\n                            {/* <td><select class=\"form-control\" name=\"status\" value={item.status}\r\n                                onChange={e => onInputChange(e, item)}>\r\n                                <option value=\"1\">Active</option>\r\n                                <option value=\"0\">Inactive</option> */}\r\n                                {/* <option value=\"blocked\">Block</option> */}\r\n                            {/* </select></td> */}\r\n                            <td>\r\n                                <Link className=\"btn btn-primary mr-2 \" to={`/cms/edit/${item._id}`}>edit </Link>\r\n                                {/* <Button className=\"btn btn-primary mr-2 \" onClick={e => handleShow(e, item)}>\r\n                                    delete\r\n                                </Button> */}\r\n                                {/* <Link className=\"btn btn-primary mr-2\" to={`/wallet/customer/${item._id}`}> delete </Link> */}\r\n                                <Button className=\"btn btn-primary \" onClick={e => itemDelete(e, item)}> Delete</Button>\r\n                            </td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {/* <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add City</Modal.Title>\r\n                </Modal.Header>\r\n                <div class=\"row\">\r\n                    <div class=\"popupselect\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <div class=\"state-name\">\r\n                                <label>State Name</label>\r\n                                <select class=\"form-control\" name=\"regionName\" onChange={e => onInputChangeRegion(e)} value={regionName}>\r\n                                    {\r\n                                        region.map((item, i) =>\r\n                                            <option value={item.isoCode} >{item.name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <div class=\"city\">\r\n                                <label>City Name</label>\r\n                                <select class=\"form-control\" name=\"cityName\" onChange={e => onInputChangeCity(e)} value={cityName}>\r\n                                    {\r\n                                        cityArray.map((item, i) =>\r\n                                            <option value={item.name} >{item.name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={e => onSubmit(e)}>\r\n                        Submit\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal> */}\r\n            {/* <Modal show={showcity} onHide={handleCloseCity}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{cityData.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <div class=\"row\">\r\n                    <div class=\"state-name-code\">\r\n                        <label>Pincode</label>\r\n                        <input  type=\"text\" name=\"code\"\r\n                            class=\"form-control\" placeholder=\"\"\r\n                            onChange={e => onInputChangePin(e)} />\r\n                        <div className=\"text-danger\">{error.pin}</div>\r\n                    </div>\r\n                </div>\r\n                <div class ='footer-side'>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseCity}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={e => onSubmitPin(e)}>\r\n                        Submit\r\n          </Button>\r\n                </Modal.Footer>\r\n                </div>\r\n                \r\n            </Modal> */}\r\n            <ToastContainer />\r\n            {/* <Pagination\r\n                showPerPage={showPerPage}\r\n                onPaginationChange={onPaginationChange}\r\n                total={total}\r\n                page={page}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cms\r\n"],"sourceRoot":""}